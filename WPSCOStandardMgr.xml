<state-machine name="WPSCOStandardMgr" base="%CONFIG_DIR%\BaseWPSCOMgr.xml">

	<transform name="receiptTransform" url="%config_dir%\WPSCOReceiptTransform.xsl"/>

	<msg-list>
		<msg-definition name="POSCC_Expired_Coupon"/>
		<msg-definition name="POSCC_SendToSSCO"/>
		<msg-definition name="Ignore_ControlCheck"/>
		<msg-definition name="AI DateOfBirth"/>
		<msg-definition name="General_POS_Error"/>
		<msg-definition name="LoyaltyCardResponse"/>
		<msg-definition name="VoidItemFirst"/>
		<msg-definition name="Ignore_POSError"/>
		<msg-definition name="FoodStamp_Zero"/>
		<msg-definition name="POSCC_Coupon_Only_Trx"/>
		<msg-definition name="POSCC_Item_Recalled"/>
	</msg-list>

	<state-list>		
		<state-definition name="Startup">
			<state-definition name="PosLoggedIn"/>
		</state-definition>
		<state-definition name="Itemization">
			<state-definition name="TransitionToTender"/>
			<state-definition name="PendingItem"/>
		</state-definition>
		<state-definition name="Finalization">
			<state-definition name="TransitionToSale"/>
			<state-definition name="CouponPrompt"/>
		</state-definition>
		<state-definition name="WaitingForTermination"/>
		<state-definition name="SuspendingTransaction"/>
		<state-definition name="VoidingTransaction"/>
		<state-definition name="SSCO_Control_Check"/>
		<state-definition name="Cancel_Dirty_Transaction"/>
		<state-definition name="Training"/>
		<state-definition name="CoinStarTendering"/>
	</state-list>

	<!-- ============================================================================ -->
	<!-- Section:  Timer definitions                                                  -->
	<!-- ============================================================================ -->
	<timer-list>
		<timer name="startup_timer"/>
	</timer-list>

	<!-- ============================================================================ -->
	<!-- Section:  Constant definitions                                               -->
	<!-- ============================================================================ -->
	<constant-list>
		<constant name="startup_duration" value="2000"/>
		<constant name="HIT_C" value="Hit %lparen%C%rparen% to Continue" type="string"/>
	</constant-list>


	<!-- ============================================================================ -->
	<!-- Section:  Variable definitions                                               -->
	<!-- ============================================================================ -->
	<variable-list>
		<variable name="SDKVersion" initial-value="2.8.0.0161" type="string"/>
		<variable name="HBTimeout" initial-value="3000" type="int"/>
		<variable name="MyLaneNumber" initial-value="" type="string"/>
		<variable name="TrxID" initial-value="0" type="int"/>
		<variable name="UniqueItemID" initial-value="0" type="int"/>
		<variable name="bIsMetric" initial-value="false" type="bool"/>
		<variable name="CalcChangeDue" initial-value="0" type="int"/>
		<variable name="strAITender" initial-value="" type="string"/>
		<variable name="iChangeDue" initial-value="0" type="int"/>
		<variable name="sRec" initial-value="" type="string"/>
		<variable name="ReceiptLine" initial-value="0" type="int"/>
		<variable name="ReceiptIndex" initial-value="0" type="int"/>
		<variable name="LinkedItemCode" initial-value="0" type="string"/>
		<variable name="LinkedUPC[14]" type="string"/>
		<variable name="CCText" type="string" initial-value=""/>
		<variable name="TransState" type="string" initial-value=""/>
		<variable name="bStartedTrx" type="bool" initial-value="false"/>
		<variable name="bInTraining" type="bool" initial-value="false"/>
		<variable name="ErrorMessage" type="string" initial-value=""/>
		<variable name="PromNo_Price" type="string" initial-value=""/>
		<variable name="newCount" initial-value="0" type="int"/>
		<variable name="VoidItemNumber" initial-value="0" type="int"/>
		<variable name="bVoidHandled" initial-value="false" type="bool"/>
		<variable name="dyn_Local" initial-value="" type="string"/>
		<variable name="dyn_count" initial-value="0" type="int"/>
		<variable name="bCanPrint" initial-value="true" type="bool"/>
		<variable name="beft_firstdecline" initial-value="false" type="bool"/>
		<variable name="lHitC" initial-value="0" type="int"/>
		<variable name="strError" intiial-value="" type="string"/>
		<variable name="ReturnCpnCnt" initial-value="0" type="int"/>
	</variable-list>

	<lookup-table name="AICommands" key-type="string" value-type="string">
		<lookup-entry key="DateOfBirth"                   value="message-name=AI DateOfBirth"/>
	</lookup-table>

	<include name="%CONFIG_DIR%\WPSCO_POSConfig.xml"/>

	<rules>

		<procedure name="CleanWPSCOMsg" returns="string" virtual="true">
			<argument name="inputString" type="string"/>
			<procedure-rule-list>
				<variable-list>
					<variable name="OutString" type="string" initial-value=""/>
				</variable-list>
				<rule action-name="assign-variable" parameter="variable-name=OutString;expression=$(inputString)"/>
				<rule action-name="assign-variable" parameter="variable-name=lHitC;expression=find(OutString,'Hit %lparen%C%rparen% to Continue')"/>
				<if expression="lHitC &gt; -1">
					<rule action-name="assign-variable" parameter="variable-name=OutString;expression=substr(OutString,0,lHitC)"/>
				</if>
				<rule action-name="assign-variable" parameter="variable-name=lHitC;expression=find(OutString,'%lparen%C%rparen% to Continue')"/>
				<if expression="lHitC &gt; -1">
					<rule action-name="assign-variable" parameter="variable-name=OutString;expression=substr(OutString,0,lHitC)"/>
				</if>
				<return expression="OutString"/>
			</procedure-rule-list>
		</procedure>
		
		<procedure name="Send_AI_State" virtual="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="SSCOState" type="string" initial-value="unknown"/>
				</variable-list>
				<!-- need to account for COLD_START, STANDBY, and BUSY -->
				<select value="/current/WPSCO_STAT[STATUS]">
					<when value="$(STAT_IDLE)">
						<rule action-name="assign-variable" parameter="variable-name=SSCOState;expression=inactive"/>
					</when>
					<when value="$(STAT_NO_SALE)">
						<rule action-name="assign-variable" parameter="variable-name=SSCOState;expression=idle"/>
					</when>
					<when value="$(STAT_SALE)">
						<rule action-name="assign-variable" parameter="variable-name=SSCOState;expression=itemization"/>
					</when>
					<when value="$(STAT_TENDER)">
						<rule action-name="assign-variable" parameter="variable-name=SSCOState;expression=finalization"/>
					</when>
				</select>
				<!-- Notify POSMgr that initialization is complete -->
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=PosState"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=State,$(SSCOState),string"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>

				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="Setup_TRX" virtual="true">
			<procedure-rule-list>
				<rule action-name="assign-variable" parameter="variable-name=UniqueItemID;expression=0"/>
				<if expression="objects.exists(/current/WPSCO_Total)">
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Total"/>
				</if>
				<rule action-name="delete" parameter="variable-name=/current/PromoMap"/>
				<rule action-name="new" parameter="name=PromoMap;destination-name=/current/PromoMap;named-elements=true;id=AB"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="SendWPSCOTotal_BalDue" virtual="true">
			<procedure-rule-list>
				<!-- Procedure assumes presence of /current/WPSCO_Total -->
				<if expression="objects.exists(/current/WPSCO_Total)">
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Totals"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TotalAmount,$(/current/WPSCO_Total[TTL_A]),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=FoodStampAmount,$(/current/WPSCO_Total[FS_BAL]),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemCount,$(/current/WPSCO_Total[TTL_I]),int"/>
					<if expression="/current/WPSCO_Total[BAL] &lt; 0">
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=BalanceDue,0,int"/>
						<rule action-name="assign-variable" parameter="variable-name=iChangeDue;expression=-1 * $(/current/WPSCO_Total[BAL])"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ChangeDue,$(iChangeDue),int"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=BalanceDue,$(/current/WPSCO_Total[BAL]),int"/>
					</else>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Points,$(/current/WPSCO_Total[TTL_CUSTPTS]),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountAmount,$(/current/WPSCO_Total[SAVINGS]),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TaxAmount.A,$(/current/WPSCO_Total[TX_A]),int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				</if>
				<return/>
			</procedure-rule-list>
		</procedure>

		<!-- Sending Zero total to POS Manager If there is no total message from POS -->
		<procedure name="SendZeroTotal" virtual="true">
			<procedure-rule-list>
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Totals"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TotalAmount,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=FoodStampAmount,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemCount,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=BalanceDue,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ChangeDue,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Points,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountAmount,0,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TaxAmount.A,0,int"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<!-- Assumes /current/AI_Tender has the current tender data from AI -->
		<procedure name="GetWPSCOTender" returns="int" virtual="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="lTender" type="int" initial-value="0"/>
				</variable-list>
				<select value="$(/current/AI_Tender[TenderType])">
					<when value="'Cash'">
						<rule action-name="assign-variable" parameter="variable-name=lTender;expression=$(SCO_TENDER_CASH)"/>
					</when>
					<when value="'PIPGeneric'">
						<rule action-name="assign-variable" parameter="variable-name=lTender;expression=$(SCO_TENDER_EFT)"/>
						<!-- Send $0 for amount on EFT Tenders.  POS decides the correct amount based on the card swiped, transaction conditions -->
						<rule action-name="assign-variable" parameter="variable-name=/current/AI_Tender[Amount];expression=0"/>
					</when>
				</select>
				<return expression="lTender"/>
			</procedure-rule-list>
		</procedure>

		<!-- Assumes /current/WPSCO_Tender has the current tender data from WPSCO -->
		<procedure name="GetAITender" returns="string" virtual="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="lTender" type="string" initial-value=""/>
				</variable-list>
				<if expression="objects.exists(/current/WPSCO_Tender[TNDR_T])">
					<select value="$(/current/WPSCO_Tender[TNDR_T])">
						<when value="$(SCO_TENDER_CASH)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Cash"/>
						</when>
						<when value="$(SCO_TENDER_EFT)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=PIPGeneric"/>
						</when>
						<when value="$(SCO_TENDER_CHECK)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Check"/>
						</when>
						<when value="$(SCO_TENDER_GIFT_CARD)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Gift Card"/>
						</when>
						<when value="$(SCO_TENDER_CREDIT)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Credit"/>
						</when>
						<when value="$(SCO_TENDER_DEBIT)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Debit"/>
						</when>
						<when value="$(SCO_TENDER_EBT_FOOD_STAMPS)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Foodstamps"/>
						</when>
						<when value="$(SCO_TENDER_EBT_CASH)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=EBT"/>
						</when>
						<when value="$(SCO_TENDER_INHOUSE_CHARGE)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=PIPGeneric"/>
						</when>
						<when value="$(SCO_TENDER_GENERAL_TYPE)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=PIPGeneric"/>
						</when>
						<when value="$(SCO_TENDER_GENERIC_CARD)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=PIPGeneric"/>
						</when>
						<when value="$(SCO_TENDER_FOOD_STAMPS)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Foodstamps"/>
						</when>
						<when value="$(SCO_TENDER_PRIVATE_CREDIT)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Credit"/>
						</when>
						<when value="$(SCO_TENDER_PRIVATE_DEBIT)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=Debit"/>
						</when>
						<!-- CoinStar Tender -->
						<when value="$(SCO_TENDER_COINSTAR)">
							<rule action-name="assign-variable" parameter="variable-name=lTender;expression=UserDefined1"/>
						</when>
					</select>
					<!-- The following are not known or would be custom tenders
						SCO_TENDER_STORE_COUPON
						SCO_TENDER_SUPER_MONEY
						SCO_TENDER_WIC
						SCO_TENDER_BUY_AID
						SCO_TENDER_STAFF_DISCOUNT
						SCO_TENDER_SA_STAFF_DISC
						SCO_TENDER_COUPON
						SCO_TENDER_FOREIGN
						SCO_TENDER_VENDOR_COUPON
						SCO_TENDER_OTC
						SCO_TENDER_UNUSED_23
						SCO_TENDER_UNUSED_24
						**********************************************	-->
					<return expression="lTender"/>
				</if>
			</procedure-rule-list>
		</procedure>

		<procedure name="StorePromotionSold" virtual="true">
			<procedure-rule-list>
				<if expression="$(/current/AI_Item[IsVoid])">
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemVoided"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(/current/AI_Item[ItemNumber]),int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				</if>
				<else>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Coupon"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(/current/AI_Item[UPC]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
					<rule action-name="increment-variable" parameter="variable-name=UniqueItemID"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(UniqueItemID),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Description,CPN_$(/current/AI_Item[UPC]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,0,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				</else>
			</procedure-rule-list>
		</procedure>

		<procedure name="PromotionSold" virtual="true">
			<procedure-rule-list>				
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,PROMO$(/current/WPSCO_Promo[PROM_NO]),string"/>
				<rule action-name="increment-variable" parameter="variable-name=UniqueItemID"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(UniqueItemID),int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ShowRewardPoints,1,int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=RewardLocation,1,int"/>				
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountAmount,$(0 - $(/current/WPSCO_Promo[AMOUNT])),int"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountDescription.1,$(/current/WPSCO_Promo[DESC]),string"/>
				<!-- TB5 POSMgr XML Bug:  AssociatedItemNumber MUST be set and also must be something more than 0 -->
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AssociatedItemNumber,1,int"/>
				<rule action-name="assign-variable" parameter="variable-name=PromNo_Price;expression=concat($(/current/WPSCO_Promo[PROM_NO]),'_')"/>
				<rule action-name="assign-variable" parameter="variable-name=PromNo_Price;expression=concat($(PromNo_Price),$(0 - $(/current/WPSCO_Promo[AMOUNT])))"/>								

				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemSold"/>					
				<if expression="objects.exists(/current/PromoMap[$(PromNo_Price)])">
					<rule action-name="assign-variable" parameter="variable-name=newCount;expression=/current/PromoMap[$(PromNo_Price)/Count]"/>
					<rule action-name="increment-variable" parameter="variable-name=newCount"/>	
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/ItemNumber.$(newCount)];expression=$(UniqueItemID)"/>
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/Count];expression=$(newCount)"/>
				</if>
				<else>
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/ItemNumber.1];expression=$(UniqueItemID)"/>
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/Count];expression=1"/>	
					<!--<rule action-name="dump"/>-->
				</else>				
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>			
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="PromotionVoid"                  virtual="true">
			<procedure-rule-list>
				<rule action-name="assign-variable" parameter="variable-name=bVoidHandled;expression=false"/>
				<rule action-name="assign-variable" parameter="variable-name=PromNo_Price;expression=concat($(/current/WPSCO_Promo[PROM_NO]),'_')"/>
				<rule action-name="assign-variable" parameter="variable-name=PromNo_Price;expression=concat($(PromNo_Price),$(/current/WPSCO_Promo[AMOUNT]))"/>								
				<if expression="objects.exists(/current/PromoMap[$(PromNo_Price)])">
					<rule action-name="assign-variable" parameter="variable-name=newCount;expression=/current/PromoMap[$(PromNo_Price)/Count]"/>
					<if expression="$(newCount) == 0">
						<break/>
					</if>
					<rule action-name="assign-variable" parameter="variable-name=VoidItemNumber;expression=/current/PromoMap[$(PromNo_Price)/ItemNumber.$(newCount)]"/>
					<if expression="$(VoidItemNumber) == -1">
						<break/>
					</if>
					<!-- Voiding zero value coupon -->
					<!-- <if expression="objects.exists(/current/AI_Item[UPC])">
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemVoided"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(/current/AI_Item[ItemNumber]),int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</if> -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemVoided"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,PROMO$(/current/WPSCO_Promo[PROM_NO]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(VoidItemNumber),int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/ItemNumber.$(newCount)];expression=-1"/>
					<rule action-name="decrement-variable" parameter="variable-name=newCount"/>	
					<rule action-name="assign-variable" parameter="variable-name=/current/PromoMap[$(PromNo_Price)/Count];expression=$(newCount)"/>
					<rule action-name="assign-variable" parameter="variable-name=bVoidHandled;expression=true"/>
				</if>								
				<if expression="!bVoidHandled">
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemSold"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,PROMO$(/current/WPSCO_Promo[PROM_NO]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ShowRewardPoints,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=RewardLocation,1,int"/>					
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountAmount,$(0 - $(/current/WPSCO_Promo[AMOUNT])),int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DiscountDescription.1,$(/current/WPSCO_Promo[DESC]),string"/>
					<rule action-name="increment-variable" parameter="variable-name=UniqueItemID"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(UniqueItemID),int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>								
				</if>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Abort_Command"                  virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_Abort_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Balance_Command"                virtual="true" override="true">
			<procedure-rule-list>
				<!-- Cash Management is not coordinated to the POS -->
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Balance"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ChangeItemPrice_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_ChangeItemPrice_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ChangeItemQuantity_Command"     virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ChangeItemQuantity_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ClearError_Command"             virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_ClearError_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Command_Command"                virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_Command_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Configuration_Command"          virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_Configuration_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_DataNeededReply_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_DataNeededReply_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Discount_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_Discount_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_EndOfDay_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_EndOfDay_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_EnterAssistMenu_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_EnterAssistMenu_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_EnterAssistMode_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_EnterAssistMode_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_EnterTenderMode_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- Request POS to enter tender state-->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_ENTER_TENDER_STATE)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_EnterTrainingMode_Command"      virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_ENTER_TRAINING_MODE)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ExitAssistMenu_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ExitAssistMenu_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ExitAssistMode_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ExitAssistMode_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ExitTenderMode_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<!-- Request POS to exit tender state-->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_ENTER_SALE_STATE)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ExitTrainingMode_Command"       virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_LEAVE_TRAINING_MODE)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_GiftCard_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_GiftCard_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_GiftCardExceptionReply_Command" virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_GiftCardExceptionReply_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_GiftReceipt_Command"            virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_GiftReceipt_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Heartbeat_Command"              virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_Heartbeat_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Initialize_Command" override="true" virtual="true">
			<procedure-rule-list>
				<rule action-name="wpsco.OpenCommunication"/>
				<!-- What happens in if the OpenCommunication Call fails? -->

				<!-- Request POS to minimize if not already hidden -->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_MINIMIZE_POST_WINDOW)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>

				<!-- Give POS a small amount of time to respond to the above before requesting status -->
				<!-- The POS may already be logged in or in a transaction -->
				<rule action-name="start-timer" parameter="timer-name=startup_timer;duration=$(startup_duration)"/>

				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Item_Command"                   virtual="true" override="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="ItemOpCode" type="int" initial-value="0"/>
					<variable name="bdeptsale" initial-value="false" type="bool"/>
					<variable name="WeightEntered" initial-value="0" type="long"/>
				</variable-list>
				<rule action-name="SaveObject" parameter="name=/current/AI_Item"/>
				<if expression="/current/AI_Item[Scanned] == 1">
					<rule action-name="assign-variable" parameter="variable-name=ItemOpCode;expression=$(SCO_SCAN_ITEM)"/>
				</if>
				<else>
					<rule action-name="assign-variable" parameter="variable-name=ItemOpCode;expression=$(SCO_KEY_ITEM)"/>
				</else>

				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(ItemOpCode)"/>
				<if expression="objects.exists(/current/AI_Item[UPC])">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PLU$(_T_)alpha$(_T_)$(/current/AI_Item[UPC])"/>
				</if>
				<else>
					<!-- Department sale -->
					<if expression="objects.exists(/current/AI_Item[Department])">
						<rule action-name="assign-variable" parameter="variable-name=bdeptsale;expression=true"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PLU$(_T_)alpha$(_T_)$(/current/AI_Item[Department])"/>
					</if>
				</else>
				<!-- The remaining fields must be evalauted based on the type of item being sold -->
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=VOID$(_T_)long$(_T_)0"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TARE$(_T_)long$(_T_)0"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=OVERID_Q$(_T_)long$(_T_)0"/>
				<if expression="$(bInTraining) == true">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)1"/>
				</if>
				<else>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)0"/>
				</else>
				<if expression="/current/AI_Item[AdditionalData.1]">
					<if expression="/current/AI_Item[AdditionalData.1] &gt; 0">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=P_OVERID$(_T_)long$(_T_)$(/current/AI_Item[AdditionalData.1])"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PRICE$(_T_)long$(_T_)$(/current/AI_Item[AdditionalData.1])"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=P_OVERID$(_T_)long$(_T_)0"/>				
					</else>
				</if>
				<else>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=P_OVERID$(_T_)long$(_T_)0"/>				
				</else>
				
				<if expression="/current/AI_Item[AdditionalData.2]">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=DEPART$(_T_)long$(_T_)$(/current/AI_Item[AdditionalData.2])"/>
				</if>

				<!-- Updating Qty field for Quantity needed item -->
				<if expression="/current/AI_Item[Quantity]">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=QTY$(_T_)long$(_T_)$(/current/AI_Item[Quantity])"/>
				</if>
				<else>					
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=QTY$(_T_)long$(_T_)0"/>
				</else>

				<!-- Updating Price field for Price required item -->
				<if expression="/current/AI_Item[Price]">
					<if expression="$(bdeptsale)">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=M_PRICE$(_T_)long$(_T_)$(/current/AI_Item[Price])"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PRICE$(_T_)long$(_T_)$(/current/AI_Item[Price])"/>
					</else>
				</if>
				<else>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PRICE$(_T_)long$(_T_)0"/>					
				</else>

				<!-- Updating Weight field for Weight required item -->
				<if expression="/current/AI_Item[Weight]">
					<rule action-name="assign-variable" parameter="variable-name=WeightEntered;expression=$(/current/AI_Item[Weight])"/>
					<if expression="!bIsMetric">
						<!-- English weights are 2-digit in POS but SSCO is 3-digit decimal -->
						<rule action-name="assign-variable" parameter="variable-name=WeightEntered;expression=WeightEntered / 10"/>
					</if>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=WEIGHT$(_T_)long$(_T_)$(WeightEntered)"/>
				</if>
				<else>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=WEIGHT$(_T_)long$(_T_)0"/>
				</else>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>

				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Language_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_Language_Command -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Loan_Command"                   virtual="true" override="true">
			<procedure-rule-list>
				<!-- Cash Management is not coordinated to the POS -->
				<rule action-name="SaveObject" parameter="name=/current/AI_Loan"/>
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Loan"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,$(/current/AI_Loan[Amount]),int"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<rule action-name="RemoveObject" parameter="name=/current/AI_Loan"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_LogApprovalDetails_Command"     virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_LogApprovalDetails_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_LoyaltyCard_Command"            virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_LoyaltyCard_Command is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Pickup_Command"                 virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="SaveObject" parameter="name=/current/AI_Pickup"/>
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Pickup"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,$(/current/AI_Pickup[Amount]),int"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<rule action-name="RemoveObject" parameter="name=/current/AI_Pickup"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_PrintExceptionReply_Command"    virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_PrintExceptionReply_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_PrintReport_Command"            virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  Impmentation AI_PrintReport_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_QueryItemPrice_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_QueryItemPrice_Commnad is not supported-->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ReloadOptions_Command"          virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ReloadOptions_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ReprintReceipt_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ReprintReceipt_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_RequestPosState_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<!-- Request the POS Status to get the Lane Number -->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_RequestTime_Command"            virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_RequestTime_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_RequestTransaction_Command"     virtual="true" override="true">
			<procedure-rule-list>
				<!-- Notify POSMgr that SignOff is complete -->
				<call name="Setup_TRX"/>
				<rule action-name="increment-variable" parameter="variable-name=TrxID"/>
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=StartTransaction"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Type,normal,string"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),int"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ResumeTransaction_Command"      virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_ResumeTransaction_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_SendKeys_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI_SendKeys_Commnad is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ShuttingDown_Command"           virtual="true" override="true">
			<procedure-rule-list>
				<!--disconnect from POS -->
				<rule action-name="wpsco.DisconnectFromPOS" />

				<!-- Let PosMgr know we are done -->
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ShutdownComplete"/>
				<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_SignOff_Command"                virtual="true" override="true">
			<procedure-rule-list>
				<!-- send Signon Request to the POS.  POS does not require ID/PWD so ignore values from AI -->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SIGN_OFF)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_SignOn_Command" override="true" virtual="true">
			<procedure-rule-list>
				<!-- send Signon Request to the POS.  POS does not require ID/PWD so ignore values from AI -->
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="assign-variable" parameter="variable-name=bCanPrint;expression=$(SSCO_PRINT_SIGNON)"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SIGN_ON)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_StartOfDay_Command"             virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_StartOfDay_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_SuspendTransaction_Command"     virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SUSPEND_TRANSACTION)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_Tender_Command"                 virtual="true" override="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="localTender" type="int" initial-value="0"/>
				</variable-list>
				<rule action-name="SaveObject" parameter="name=/current/AI_Tender"/>
				<if expression="/current/AI_Tender[TenderType] == 'UserDefined1'">
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=DataNeeded"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Type,3,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TopCaption.1,%%9046,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=SummaryInstruction.1,%%9047,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=EnableScanner,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ScannerDataFormat,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Mode,1,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="CoinStarTendering"/>
				</if>
				<else>
					<rule action-name="assign-variable" parameter="variable-name=localTender;expression=GetWPSCOTender()"/>
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_ENTER_TENDER)"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TNDR_T$(_T_)long$(_T_)$(localTender)"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TNDR_A$(_T_)long$(_T_)$(/current/AI_Tender[Amount])"/>
					<if expression="$(bInTraining) == true">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)1"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)0"/>
					</else>
					<!-- Below is a duplicate line -->
					<!-- <rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)0"/> -->
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</else>

				<!-- TBD do we need the AI_Tender  -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_TenderExceptionReply_Command"   virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_TenderExceptionReply_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_ValidateUserId_Command"         virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="SaveObject" parameter="name=/current/AI_VAL"/>
				
				<if expression="(length(/current/AI_VAL[UserId])&lt;5) &amp;&amp; (length(/current/AI_VAL[Password])&lt;5)">
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_VALIDATE_OPERATOR)"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=OPER_ID$(_T_)alpha$(_T_)$(/current/AI_VAL[UserId])"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PASS$(_T_)alpha$(_T_)$(/current/AI_VAL[Password])"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					<!-- Remove Object after getting success/fail from the POS -->
				</if>
				<else>
					<!-- Notify POSMgr that the user is NOT valid -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ValidateUserId"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UserId,$(/current/AI_VAL[UserId]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AuthenticationLevel,0,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/AI_VAL"/>
				</else>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_VoidItem_Command"               virtual="true" override="true">
			<procedure-rule-list>
				<variable-list>
					<variable name="ItemOpCode" type="int" initial-value="0"/>
					<variable name="WeightEntered" initial-value="0" type="long"/>
					<variable name="bdeptsale" initial-value="false" type="bool"/>
				</variable-list>
				<if expression="objects.exists(/current/AI_Item)">
					<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
				</if>
				<rule action-name="SaveObject" parameter="name=/current/AI_Item"/>
				<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
				<rule action-name="assign-variable" parameter="variable-name=/current/AI_Item[IsVoid];expression=1"/>
				<if expression="/current/AI_Item[Scanned] == 1">
					<rule action-name="assign-variable" parameter="variable-name=ItemOpCode;expression=$(SCO_SCAN_ITEM)"/>
				</if>
				<else>
					<rule action-name="assign-variable" parameter="variable-name=ItemOpCode;expression=$(SCO_KEY_ITEM)"/>
				</else>
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(ItemOpCode)"/>
				<if expression="objects.exists(/current/AI_Item[UPC])">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PLU$(_T_)alpha$(_T_)$(/current/AI_Item[UPC])"/>
				</if>
				<else>
					<!-- Must be a department sale! -->
					<if expression="objects.exists(/current/AI_Item[Department])">
						<rule action-name="assign-variable" parameter="variable-name=bdeptsale;expression=true"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PLU$(_T_)alpha$(_T_)$(/current/AI_Item[Department])"/>
					</if>					
				</else>
				<if expression="/current/AI_Item[Quantity]" >
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=QTY$(_T_)long$(_T_)$(/current/AI_Item[Quantity])"/>
				</if>
				<if expression="/current/AI_Item[Price]">
					<if expression="$(bdeptsale)">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=M_PRICE$(_T_)long$(_T_)$(/current/AI_Item[Price])"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PRICE$(_T_)long$(_T_)$(/current/AI_Item[Price])"/>
					</else>
				</if>
				<if expression="/current/AI_Item[Weight]">
					<rule action-name="assign-variable" parameter="variable-name=WeightEntered;expression=$(/current/AI_Item[Weight])"/>
					<if expression="!bIsMetric">
						<!-- English weights are 2-digit in POS but SSCO is 3-digit decimal -->
						<rule action-name="assign-variable" parameter="variable-name=WeightEntered;expression=WeightEntered / 10"/>
					</if>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=WEIGHT$(_T_)long$(_T_)$(WeightEntered)"/>
				</if>

				<if expression="/current/AI_Item[AdditionalData.1] &gt; 0">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=P_OVERID$(_T_)long$(_T_)$(/current/AI_Item[AdditionalData.1])"/>
				</if>
				
				<if expression="/current/AI_Item[AdditionalData.2]">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=DEPART$(_T_)long$(_T_)$(/current/AI_Item[AdditionalData.2])"/>
				</if>
				
				<if expression="$(bInTraining) == true">
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=TRAIN$(_T_)long$(_T_)1"/>
				</if>				

				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=VOID$(_T_)long$(_T_)1"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<transition state-name="Itemization$PendingItem"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_VoidTender_Command"             virtual="true" override="true">
			<procedure-rule-list>
				<!-- TODO:  Impmentation AI_VoidTender_Commnad -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_VoidTransaction_Command"        virtual="true" override="true">
			<procedure-rule-list>
				<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
				<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_VOID_TICKET)"/>
				<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				<return/>
			</procedure-rule-list>
		</procedure>

		<procedure name="AI_WeightScaleCheck_Command"       virtual="true" override="true">
			<procedure-rule-list>
				<!-- FYI:  AI WeightScaleCheck message is not supported -->
				<return/>
			</procedure-rule-list>
		</procedure>

		<state name="*">

			<message name="POS_ESC_CODE_TEXT_LINE">
				<message-rule-list>
					<!--TODO:  Enhance once new data available from Retalix -->
					<!-- Hook builds data to send to SSCO -->
					<rule action-name="SaveObject" parameter="name=/current/Receipt"/>
					<!-- R flag indicates whether or not line should be printed -->
					<if expression="/current/Receipt[R] == 1">
						<select value="$(/current/Receipt[T]">
							<when value="'CUT       '">
								<if expression="ReceiptLine &gt; 0">
									<if expression="bCanPrint">
										<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),{ESC}|P,bin.base64"/>
										<rule action-name="increment-variable" parameter="variable-name=ReceiptIndex"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=command;value=Receipt"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Id,$(ReceiptIndex),string"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Complete,1,int"/>
										<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_receipt])"/>
									</if>
									<rule action-name="assign-variable" parameter="variable-name=bCanPrint;expression=true"/>
									<rule action-name="reset-plist" parameter="name=/current/ws_receipt"/>
									<rule action-name="assign-variable" parameter="variable-name=ReceiptLine;expression=0"/>
								</if>
							</when>
							<when value="'CUT_COMAND'">
								<if expression="ReceiptLine &gt; 0">
									<if expression="bCanPrint">
										<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),{ESC}|P,bin.base64"/>
										<rule action-name="increment-variable" parameter="variable-name=ReceiptIndex"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=command;value=Receipt"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Id,$(ReceiptIndex),string"/>
										<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Complete,1,int"/>
										<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_receipt])"/>
									</if>
									<rule action-name="assign-variable" parameter="variable-name=bCanPrint;expression=true"/>
									<rule action-name="reset-plist" parameter="name=/current/ws_receipt"/>
									<rule action-name="assign-variable" parameter="variable-name=ReceiptLine;expression=0"/>
								</if>
							</when>
							<when value="'LOGO      '">
								<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),{ESC}|1B,bin.base64"/>
							</when>
							<when value="'BAR_CODE  '">
								<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),{EOT}SSF:104:80:300:-2:-13:$(/current/Receipt[TXT]){SI},bin.base64"/>
							</when>
							<when value="'BAR_COD128'">
								<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),{EOT}SSF:110:80:-11:-2:-13:$(/current/Receipt[TXT]){SI},bin.base64"/>
							</when>
							<when value="'HEADER    '"/>
							<when value="'LEADER    '"/>
							<when value="'FOOTER    '"/>
							<when value="'TRAILER   '"/>
							<otherwise>
								<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
								<rule action-name="assign-variable" parameter="variable-name=sRec;expression=/current/Receipt[TXT_WITH_ESC]"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),$(sRec),bin.base64"/>
							</otherwise>
						</select>
					</if>
					<rule action-name="RemoveObject" parameter="name=/current/Receipt"/>
				</message-rule-list>
			</message>

			<message name="POS_DYNAMIC_RECEIPT_XML_FILE">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/DynReceipt"/>
					<rule action-name="objects.load-templates" parameter="name=/current/DynReceiptData;url=$(/current/DynReceipt[FILENAME])"/>
					<rule action-name="objects.transform" parameter="name=/current/AIReceipt;transform=receiptTransform;text=/current/DynReceiptData/Documents"/>
					<rule action-name="assign-variable" parameter="variable-name=dyn_count;expression=1"/>
					<while expression="objects.exists(/current/AIReceipt[PrintLine_$(dyn_count)])">
						<rule action-name="assign-variable" parameter="variable-name=dyn_Local;expression=/current/AIReceipt[PrintLine_$(dyn_count)]"/>
						<if expression="substr(dyn_Local,0,8) == 'DataType'">
							<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),$(dyn_Local),string"/>
						</if>
						<else>
							<rule action-name="increment-variable" parameter="variable-name=ReceiptLine"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=PrinterData.$(ReceiptLine),$(escape(dyn_Local)),bin.base64"/>
						</else>
						<!-- Check for Cut, complete -->
						<if expression="dyn_Local == '{ESC}|P'">
							<rule action-name="increment-variable" parameter="variable-name=ReceiptIndex"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=command;value=Receipt"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Id,$(ReceiptIndex),string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_receipt;parm-name=field;value=Complete,1,int"/>
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_receipt])"/>
							<rule action-name="reset-plist" parameter="name=/current/ws_receipt"/>
							<rule action-name="assign-variable" parameter="variable-name=ReceiptLine;expression=0"/>
						</if>
						<rule action-name="increment-variable" parameter="variable-name=dyn_count"/>
					</while>
				</message-rule-list>
			</message>

			<message name="AI ShuttingDown" override="true">
				<message-rule-list>
					<message-handler message-name="super.AI ShuttingDown"/>
					<transition state-name="WaitingForTermination"/>
				</message-rule-list>
			</message>

			<message name="AI DateOfBirth">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/DOB"/>
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_DATE_OF_BIRTH)"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=DAY$(_T_)alpha$(_T_)$(/current/DOB[Day])"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=MONTH$(_T_)alpha$(_T_)$(/current/DOB[Month])"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=YEAR$(_T_)alpha$(_T_)$(/current/DOB[Year])"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=CUS_AGE$(_T_)alpha$(_T_)$(/current/DOB[Age])"/>
					<if expression="/current/DOB[DateNotNeeded]">
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=CASHIER_VERIFIED_DOB$(_T_)long$(_T_)1)"/>
					</if>
					<else>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=CASHIER_VERIFIED_DOB$(_T_)long$(_T_)0)"/>
					</else>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/DOB"/>
				</message-rule-list>
			</message>

			<message name="POS_CONTROL_CHECK">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/POSCC"/>
					<try>
						<rule action-name="assign-variable" parameter="variable-name=CCText;expression=lookup(ControlCheck,'$(/current/POSCC[CC_NO])')"/>
					</try>
					<catch>
						<rule action-name="assign-variable" parameter="variable-name=CCText;expression=POSCC_SendToSSCO"/>
					</catch>
					<rule action-name="send-msg" parameter="message-name=$(CCText)"/>
					<!-- The /current/POSCC data may be REQURED for handling the issue.  DO NOT delete here -->
				</message-rule-list>
			</message>

			<message name="Ignore_ControlCheck">
				<message-rule-list>
					<rule action-name="RemoveObject" parameter="name=/current/POSCC"/>
				</message-rule-list>
			</message>

			<message name="POSCC_SendToSSCO">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=DataNeeded"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Type,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,2,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TopCaption.1,%%9048,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=SummaryInstruction.1,$(/current/POSCC[TXT]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Mode,1,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/POSCC"/>
					<transition state-name="SSCO_Control_Check"/>
				</message-rule-list>
			</message>

			<message name="Terminate">
				<message-rule-list>
					<rule action-name="complete"/>
				</message-rule-list>
			</message>

			<message name="POS_ENTER_ASSIST_MODE" override="true">
				<!-- Ignore this message.  Retalix will stop sending it -->
			</message>

			<message name="POS_STATUS">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_STAT"/>
					<call name="Send_AI_State"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
				</message-rule-list>
			</message>

			<message name="POS_OPERATOR_VALIDATED">
				<message-rule-list>
					<!-- Notify POSMgr that the user is valid -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ValidateUserId"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UserId,$(/current/AI_VAL[UserId]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AuthenticationLevel,2,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/AI_VAL"/>
				</message-rule-list>
			</message>

			<message name="ERROR_OPERATOR_NOT_VALID">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/POS_VAL"/>
					<!-- Notify POSMgr that the user is NOT valid -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ValidateUserId"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UserId,$(/current/AI_VAL[UserId]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AuthenticationLevel,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(/current/POS_VAL[ERR_TXT]),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/POS_VAL"/>
					<rule action-name="RemoveObject" parameter="name=/current/AI_VAL"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Uninitialized">

			<message name="AI Initialize" override="true">
				<message-rule-list>
					<message-handler message-name="super.AI Initialize"/>
					<transition state-name="Startup"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Startup">

			<message name="POS_VOUCHER_NOT_USED_END">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_KEY_PRESS)"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=CODE$(_T_)long$(_T_)32003"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</message-rule-list>
			</message>
			
			<message name="startup_timer_timeout">
				<message-rule-list>
					<!-- Request the POS Status to get the Lane Number -->
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</message-rule-list>
			</message>

			<message name="POS_STATUS">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_POS"/>
					<rule action-name="assign-variable" parameter="variable-name=MyLaneNumber;expression=$(/current/WPSCO_POS[POS_NO])"/>

					<if expression="/current/WPSCO_POS[STATUS] == STAT_IDLE">
						<!-- Notify POSMgr that initialization is complete -->
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=InitializationComplete"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Version,$(SDKVersion),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LaneNumber,$(/current/WPSCO_POS[POS_NO]),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=HeartbeatTimeout,$(HBTimeout),int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_POS"/>
						<transition state-name="Inactive"/>
					</if>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_POS"/>
				</message-rule-list>
			</message>

			<message name="POS_TICKET_STARTED">
				<message-rule-list>	
					<rule action-name="stop-timer" parameter="timer-name=startup_timer"/>
					<!-- This POS is already logged in and maybe inside a transaction -->
					<!-- Send StatusRequest to determine next steps based on POS messages -->

					<!-- Request the POS Status to get the Lane Number -->
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					<transition state-name="Startup$PosLoggedIn"/>
				</message-rule-list>
			</message>

			<message name="POS_TOTAL">
				<message-rule-list>	
					<rule action-name="stop-timer" parameter="timer-name=startup_timer"/>
					<!-- This POS is already logged in and maybe inside a transaction -->
					<!-- The POS is insdie a transaction.  Wait for POS to complete the void -->
					<!-- and start a new transaction -->
				</message-rule-list>
			</message>

			<message name="POS_TENDER_SOLD">
				<message-rule-list>	
					<rule action-name="stop-timer" parameter="timer-name=startup_timer"/>
					<!-- This POS is already logged in and maybe inside a transaction -->
					<!-- The POS is insdie a transaction.  Wait for POS to complete the void -->
					<!-- and start a new transaction -->
				</message-rule-list>
			</message>

			<message name="POS_SIGN_OFF">
				<message-rule-list>
					<!-- The POS should be sign out.  Send another status request to make sure -->
					<!-- Request the POS Status to get the Lane Number -->
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</message-rule-list>
			</message>

			<state name="PosLoggedIn">

				<message name="POS_STATUS">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_POS"/>
						<if expression="/current/WPSCO_POS[STATUS] == STAT_NO_SALE">
							<!-- POS is logged in ready for transaction, need to sign off -->
							<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
							<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SIGN_OFF)"/>
							<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
							<rule action-name="RemoveObject" parameter="name=/current/WPSCO_POS"/>
							<transition state-name="Startup"/>
						</if>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_POS"/>
					</message-rule-list>
				</message>

				<message name="POS_TICKET_STARTED">
					<message-rule-list>
						<!-- This POS is already logged in and maybe inside a transaction -->
						<!-- Send StatusRequest to determine next steps based on POS messages -->

						<!-- Request the POS Status to get the Lane Number -->
						<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
						<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					</message-rule-list>
				</message>

			</state>

		</state>

		<state name="Inactive">

			<message name="POS_SIGN_ON">
				<message-rule-list>
					<!-- Need to wait for POS_TICKET_STARTED before sending SignOn Complete -->
				</message-rule-list>
			</message>

			<message name="POS_TICKET_STARTED">
				<message-rule-list>
					<!-- Notify POSMgr that SignOn is complete -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=SignOn"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LaneNumber,$(MyLaneNumber),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="Idle"/>
				</message-rule-list>
			</message>

			<message name="ERROR_POS_SIGNON">
				<message-rule-list>
					<!-- Notify POSMgr that SignOn is complete -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=SignOn"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LaneNumber,$(MyLaneNumber),string"/>
					<!-- TODO:  Report POS Error if possible, need details of ERROR_POS_SIGNON message.  Retalix Gap -->
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,'ERROR: POS Signon Failed!',string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Idle">
			<entry-rule-list>
				<rule action-name="assign-variable" parameter="variable-name=bStartedTrx;expression=false"/>
			</entry-rule-list>

			<message name="AI RequestTransaction" override="true">
				<message-rule-list>
					<message-handler message-name="super.AI RequestTransaction"/>
					<transition state-name="Itemization"/>
				</message-rule-list>
			</message>

			<message name="AI EnterTrainingMode" override="true">
				<message-rule-list>
					<message-handler message-name="super.AI EnterTrainingMode"/>
					<transition state-name="Training"/>
				</message-rule-list>
			</message>

			<message name="AI ExitTrainingMode" override="true">
				<message-rule-list>
					<message-handler message-name="super.AI ExitTrainingMode"/>
					<transition state-name="Training"/>
				</message-rule-list>
			</message>

			<message name="POS_SIGN_OFF">
				<message-rule-list>
					<if expression="$(bInTraining) == true">
						<!-- POS Exits training on Sign-off.  Notifiy SSCO -->
						<rule action-name="assign-variable" parameter="variable-name=bInTraining;expression=false"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TrainingModeExited"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</if>				

					<!-- Notify POSMgr that SignOn is complete -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=SignOff"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LaneNumber,$(MyLaneNumber),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<!-- Request the POS Status to update SSCO with STATE -->
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					<transition state-name="Inactive"/>
				</message-rule-list>
			</message>

			<message name="ERROR_POS_SIGNOFF">
				<message-rule-list>
					<!-- Notify POSMgr that SignOff is complete -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=SignOff"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LaneNumber,$(MyLaneNumber),string"/>
					<!-- TODO:  Report POS Error if possible, need details of ERROR_POS_SIGNOFF message.  Retalix Gap -->
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,'ERROR: POS Signoff Failed!',string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Itemization">
			<entry-rule-list>
				<rule action-name="assign-variable" parameter="variable-name=bStartedTrx;expression=true"/>
			</entry-rule-list>

			<message name="AI Item" override="true">
				<message-rule-list>
					<if expression="objects.exists(/current/AI_Item)">
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
					</if> 
					<call name="AI_Item_Command"/>
					<transition state-name="Itemization$PendingItem"/>
				</message-rule-list>
			</message>

			<message name="POS_PROMOTION_SOLD">
				<message-rule-list>				    
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Promo"/>
					<if expression="/current/WPSCO_Promo[VOID] == 0">
						<call name="PromotionSold"/>
					</if>
					<else>
						<call name="PromotionVoid"/>
					</else>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Promo"/>
				</message-rule-list>				    
			</message>

			<!-- Coupon is voiding with the promotion NOT active, WPSCO report POS_VOUCHER_ACCEPTED message -->
			<message name="POS_VOUCHER_ACCEPTED">
				<message-rule-list>
					<call name="StorePromotionSold"/>
				</message-rule-list>
			</message>

			<!-- Linked item -->
			<message name="POS_ITEM_SOLD">
				<message-rule-list>				    
					<rule action-name="resend-msg"/>
					<transition state-name="Itemization$PendingItem"/>
				</message-rule-list>
			</message>

			<message name="POS_TOTAL">
				<message-rule-list>
					<!-- Always keep the last total received, just in case! -->
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Total"/>
					<call name="SendWPSCOTotal_BalDue"/>
				</message-rule-list>
			</message>

			<message name="AI EnterTenderMode" override="true">
				<message-rule-list>
					<if expression="$(UniqueItemID) == '0'">
						<call name="SendZeroTotal"/>
						<transition state-name="Cancel_Dirty_Transaction"/>
					</if>
					<else>
						<call name="AI_EnterTenderMode_Command"/>
						<transition state-name="Itemization$TransitionToTender"/>
					</else>
				</message-rule-list>
			</message>

			<!-- Cancel all items -->
			<message name="POS_TICKET_VOIDED">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionVoided"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="VoidingTransaction"/>
				</message-rule-list>
			</message>

			<message name="POS_TRANSACTION_SUSPENDED">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Suspend"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionSuspended"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Suspend"/>
					<transition state-name="SuspendingTransaction"/>
				</message-rule-list>
			</message>

			<!-- If MFS is offile POS can reject Supend transaction  -->
			<message name="ERROR_SUSPEND_TRANSACTION">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Suspend"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,4,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,1,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Suspend"/>
				</message-rule-list>
			</message>

			<state name="PendingItem">
			
				<message name="ERROR_ITEM_QTY_EXEEDED">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Exception"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=QuantityRestricted,1,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=MaximumQuantity,0,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Exception"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<message name="ERROR_DEPARTMENT_NOT_FOUND">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_ItemException"/>					
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=NotFound,1,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ItemException"/>	
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>					
					</message-rule-list>
				</message>
				
				<message name="ERROR_ITEM_NEED_DEPARTMENT">
					<message-rule-list>
						<!-- Prompt for price first -->
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_PriceException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DepartmentRequired,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_PriceException"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>
				
				<message name="ERROR_ITEM_NEED_PRICE_DEPARTMENT">
					<message-rule-list>
						<!-- Prompt for price first -->
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_PriceException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=PriceRequired,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_PriceException"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>
				
				<message name="POS_PROMOTION_SOLD">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Promo"/>
						<if expression="/current/WPSCO_Promo[VOID] == 0">
							<call name="PromotionSold"/>
						</if>
						<else>
							<call name="PromotionVoid"/>
						</else>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Promo"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<message name="POS_ITEM_SOLD">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Item"/>
						<if expression="/current/WPSCO_Item[VOID] == 0">
							<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
							<if expression="/current/WPSCO_Item[COUPON] != 0" >
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Coupon"/>
								<!-- TB5 bug, 2.8 still requires Id in the Coupon message -->
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(/current/AI_Item[UPC]),string"/>
							</if>
							<else>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemSold"/>
							</else>
							<if expression="$(/current/WPSCO_Item[ITEM_LINKS])!='0'">
								<rule action-name="assign-variable" parameter="variable-name=LinkedItemCode;expression=$(/current/AI_Item[UPC])"/>
							</if>
							<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
							
							<if expression="$(/current/WPSCO_Item[LINK])!='0'">
								<rule action-name="split" parameter="variable-name=LinkedUPC;value=$(/current/WPSCO_Item[PLU]);delimeter=' '"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(LinkedUPC[0]),string"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=LinkedItem,$(LinkedItemCode),string"/>
							</if>
							<else-if expression="objects.exists(/current/AI_Item[UPC])">
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
							</else-if>
							<else>
								<if expression="objects.exists(/current/AI_Item[Department])">
									<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
								</if>
							</else>
							<!-- Use SM generated ID until Retalix serial number data from WPSCO -->
							<rule action-name="increment-variable" parameter="variable-name=UniqueItemID"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(UniqueItemID),int"/>

							<if expression="/current/WPSCO_Item[COUPON] != 0" >
								<!-- POS sends coupons with zero price, use amount -->
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Price,$(/current/WPSCO_Item[AMOUNT]),int"/>
							</if>
							<else>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Price,$(/current/WPSCO_Item[PRICE]),int"/>
							</else>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExtendedPrice,$(/current/WPSCO_Item[AMOUNT]),int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Description,$(/current/WPSCO_Item[DESC]),string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Quantity,$(/current/WPSCO_Item[QTY]),int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=DealQuantity,$(/current/WPSCO_Item[MSU]),int"/>
							<if expression="/current/WPSCO_Item[AGE] != 0" >
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Age,$(/current/WPSCO_Item[AGE]),int"/>
							</if>
							<!-- <rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=VisualVerifyRequired,$(/current/WPSCO_Item[VISUAL_VERIFY]),int"/> -->
							<if expression="bIsMetric">
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Weight,$(/current/WPSCO_Item[WEIGHT]),int"/>
							</if>
							<else>
								<!-- English weight is only 2 decimal places in WPSCO.  SSCO is 3 -->
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Weight,$(/current/WPSCO_Item[WEIGHT])0,int"/>
							</else>

							<!-- <rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=VisualVerifyRequired,$(/current/WPSCO_Item[VISUAL_VERIFY]),string"/> -->
							<!--TODO:Fields not used ORG_PRICE, DEC_QTY, FREE, TAXSET, TAXRESET, ITEM_LINKS, WEIGHT_COMPARE -->
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						</if>
						<else>
							<if expression="$(/current/WPSCO_Item[LINK]) == '0'">
								<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemVoided"/>
								<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
								<if expression="objects.exists(/current/AI_Item[UPC])">
									<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
								</if>
								<else-if expression="objects.exists(/current/AI_Item[Department])">
									<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
								</else-if>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ItemNumber,$(/current/AI_Item[ItemNumber]),int"/>
								<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							</if>
						</else>
						<!-- <rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>	 -->			
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Item"/>		
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<!-- Coupon is voiding with the promotion NOT active, WPSCO report POS_VOUCHER_ACCEPTED message -->
				<message name="POS_VOUCHER_ACCEPTED">
					<message-rule-list>
						<call name="StorePromotionSold"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>
				
				<message name="POS_TOTAL">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Total"/>
						<call name="SendWPSCOTotal_BalDue"/>
					</message-rule-list>
				</message>

				<message name="POS_ITEM_NEED_QTY">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Exception"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=QuantityRequired,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Exception"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<message name="POS_ITEM_NEED_WEIGHT">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Exception"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=WeightRequired,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Exception"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<message name="POS_ERROR_TEXT">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_ERR"/>
						<try>
							<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=lookup(ErrorMessages,'$(/current/WPSCO_ERR[SCREEN_NAME])')"/>
						</try>
						<catch>
							<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=General_POS_Error"/>
						</catch>
						<rule action-name="send-msg" parameter="message-name=$(ErrorMessage)"/>						
					</message-rule-list>
				</message>

				<!-- Nothing todo -->
				<message name="Ignore_POSError"/>

				<message name="POS_LOYALTY_CARD"  virtual="true" >
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=LoyaltyCard"/>
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AccountNumber,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Loyalty[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AccountNumber,$(/current/AI_Loyalty[UPC]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=CardType,loyalty,string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Status,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>						
					</message-rule-list>
				</message>

				<message name="LoyaltyCardResponse"  virtual="true" >
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="assign-variable" parameter="variable-name=strError;expression=CleanWPSCOMsg('$(/current/WPSCO_ERR[ERR_TXT])')"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(strError),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=LoyaltyCard"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=CardType,loyalty,string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Status,0,int"/>
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AccountNumber,$(/current/AI_Item[UPC]),string"/>
						</if>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ERR"/>
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>						
					</message-rule-list>
				</message>

				<message name="General_POS_Error">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>						
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<rule action-name="assign-variable" parameter="variable-name=strError;expression=CleanWPSCOMsg('$(/current/WPSCO_ERR[ERR_TXT])')"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(strError),string"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ERR"/>
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<!-- Not For Sale Exception Item -->
				<message name="ERROR_ITEM_NOT_FOR_SALE">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_ItemException"/>					
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Inactive,1,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=CustomerMessage.1,$(/current/WPSCO_ItemException[ERR_TXT]),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ItemException"/>	
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>
					</message-rule-list>		
				</message>

				<!-- Not Found Exception Item -->
				<message name="ERROR_ITEM_NOT_FOUND">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_ItemException"/>					
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=NotFound,1,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ItemException"/>	
						<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
						<transition state-name="Itemization"/>					
					</message-rule-list>		
				</message>

				<!-- Price Required Item -->
				<message name="ERROR_ITEM_NEED_PRICE">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_PriceException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=PriceRequired,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_PriceException"/>
						<transition state-name="Itemization"/>
					</message-rule-list>					
				</message>

				<!-- Time Restricted Item -->
				<message name="ERROR_TIME_RESTRICTED">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_TimeException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TimeRestricted,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_TimeException"/>
						<transition state-name="Itemization"/>
					</message-rule-list>					
				</message>

				<message name="POSCC_Item_Recalled">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Recalled,1,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/POSCC"/>
						<transition state-name="Itemization"/>
					</message-rule-list>		
				</message>
				
				<message name="POSCC_Expired_Coupon">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=CouponException"/>
						<!-- Use UPC/Dept from AI message,  POS message does not have the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/POSCC"/>
						<transition state-name="Itemization"/>
					</message-rule-list>
				</message>

				<!-- Unmatched Coupon -->
				<message name="ERROR_SALE_COUPON">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_CouponException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=CouponException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,1,int"/>					
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_CouponException"/>
						<transition state-name="Itemization"/>					
					</message-rule-list>
				</message>
				
				<message name="POSCC_Coupon_Only_Trx">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=CouponException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,1,int"/>					
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/POSCC"/>
						<transition state-name="Itemization"/>					
					</message-rule-list>
				</message>

				<message name="VoidItemFirst">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=CouponException"/>
						<!-- Use UPC/Dept from AI message,  POS message truncates the value -->
						<if expression="objects.exists(/current/AI_Item[UPC])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=UPC,$(/current/AI_Item[UPC]),string"/>
						</if>
						<else-if expression="objects.exists(/current/AI_Item[Department])">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Department,$(/current/AI_Item[Department]),string"/>
						</else-if>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,3,int"/>					
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<transition state-name="Itemization"/>					
					</message-rule-list>
				</message>


			</state>

			<state name="TransitionToTender">

				<message name="POS_TOTAL">
					<message-rule-list>
						<!-- Always keep the last total received, just in case! -->
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_Total"/>
							<!-- Condition for checking zero balance due tra. -->
						<if expression="$(/current/WPSCO_Total[TTL_A]) == '0' &amp;&amp; $(/current/WPSCO_Total[TTL_I]) == '0' ">
							<call name="SendWPSCOTotal_BalDue"/>
							<transition state-name="Cancel_Dirty_Transaction"/>
						</if>
					</message-rule-list>
				</message>

				<message name="POS_ENTERED_TENDER_STATE">
					<message-rule-list>
							<call name="SendWPSCOTotal_BalDue"/>
					</message-rule-list>
				</message>

				<message name="POS_STATUS">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_STAT"/>
						<call name="Send_AI_State"/>
						<if expression="/current/WPSCO_STAT[STATUS] == $(STAT_TENDER)">
							<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
							<transition state-name="Finalization"/>
						</if>
						<else>
							<!-- No known failure condition possible in the POS, as precaution just resend request to enter tender state -->
							<call name="AI_EnterTenderMode_Command"/>
						</else>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
					</message-rule-list>
				</message>

			</state>

		</state>

		<state name="Finalization">

			<message name="AI ExitTenderMode" override="true">
				<message-rule-list>
					<call name="AI_ExitTenderMode_Command"/>
					<transition state-name="Finalization$TransitionToSale"/>
				</message-rule-list>
			</message>

			<message name="POS_ERROR_TEXT">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_ERR"/>
					<try>
						<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=lookup(ErrorMessages,'$(/current/WPSCO_ERR[SCREEN_NAME])')"/>
					</try>
					<catch>
						<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=General_POS_Error"/>
					</catch>
					<rule action-name="send-msg" parameter="message-name=$(ErrorMessage)"/>						
				</message-rule-list>
			</message>

			<message name="POS_TENDER_SOLD">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Tender"/>
					<rule action-name="assign-variable" parameter="variable-name=strAITender;expression=GetAITender()"/>

					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderAccepted"/>
					<if expression="objects.exists(/current/WPSCO_Tender[TNDR_T])">						
						<!-- POS returned TNDR_T == 0 for CoinStar Tender -->
						<if expression="/current/WPSCO_Tender[TNDR_T] == 0">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,$(0 - $(/current/WPSCO_Tender[TNDR_A])),int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,$(strAITender),string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Description,$(/current/WPSCO_Tender[DESC]),string"/>
						</if>
						<else>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,$(/current/WPSCO_Tender[TNDR_A]),int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,$(strAITender),string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Description,$(/current/WPSCO_Tender[DESC]),string"/>
						</else>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</if>						
					<else>
						<!-- POS did not return Tender Type:  Happens with $0 cash tender -->
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Amount,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,Cash,string"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<!-- Resend the last total:  POS does not send total after $0 cash tender -->
						<call name="SendWPSCOTotal_BalDue"/>
					</else>
				</message-rule-list>
			</message>

			<message name="POS_TOTAL">
				<message-rule-list>
					<!-- Always keep the last total received, just in case! -->
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Total"/>
					<rule action-name="assign-variable" parameter="variable-name=beft_firstdecline;expression=false"/>
					<call name="SendWPSCOTotal_BalDue"/>
				</message-rule-list>
			</message>

			<!-- A time-out during finalization can trigger to void transaction -->
			<message name="POS_TICKET_VOIDED">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionVoided"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="VoidingTransaction"/>
				</message-rule-list>
			</message>
			
			<!-- Not handling yet -->
			<message name="General_POS_Error"/>

			<message name="ERROR_EFT_TENDER_CANCELLED">
				<message-rule-list>
					<if expression="beft_firstdecline == false">
						<rule action-name="assign-variable" parameter="variable-name=beft_firstdecline;expression=true"/>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_TenderException"/>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,PIPGeneric,string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,13,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_TenderException"/>
					</if>
					<else>
						<rule action-name="assign-variable" parameter="variable-name=beft_firstdecline;expression=false"/>
					</else>
				</message-rule-list>
			</message>

			<message name="ERROR_EFT_TENDER_DECLINED">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_TenderException"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,PIPGeneric,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
					<rule action-name="assign-variable" parameter="variable-name=strError;expression=CleanWPSCOMsg('$(/current/WPSCO_TenderException[ERR_TXT])')"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(strError),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_TenderException"/>
				</message-rule-list>
			</message>

			<message name="POS_CLOSE_TICKET"/>

			<!-- Transaction Suspended in POS -->
			<message name="POS_TRANSACTION_SUSPENDED">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Suspend"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionSuspended"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Suspend"/>
					<transition state-name="SuspendingTransaction"/>
				</message-rule-list>
			</message>

			<!-- POS rejected Supend transaction after Partial Cash -->
			<message name="ERROR_SUSPEND_TRANSACTION">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Suspend"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,4,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,1,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Suspend"/>
				</message-rule-list>
			</message>

			<message name="POS_ENTERED_TENDER_STATE">
				<message-rule-list>
					<!-- Placeholder:  No action at this time -->
				</message-rule-list>
			</message>

			<message name="POS_TICKET_STARTED">
				<message-rule-list>
					<!--Transaction has finished -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=EndTransaction"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="Idle"/>
				</message-rule-list>
			</message>

			<message name="POS_BEEP"/>
			
			<message name="FoodStamp_Zero">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,PIPGeneric,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
					<rule action-name="assign-variable" parameter="variable-name=strError;expression=CleanWPSCOMsg('$(/current/WPSCO_ERR[ERR_TXT])')"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(strError),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ERR"/>
				</message-rule-list>
			</message>
			
			<message name="POS_ITEM_LINKED_TEXT_LINE">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_MSG"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=Message"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(/current/WPSCO_MSG[TXT]),string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Destination.1,attendant,string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_MSG"/>
				</message-rule-list>
			</message>
			
			<message name="POS_VOUCHER_NOT_USED">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_CPN"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_couponDN"/>
					<rule action-name="increment-variable" parameter="variable-name=ReturnCpnCnt"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=DetailedInstruction.$(ReturnCpnCnt),\n$(/current/WPSCO_CPN[BARCODE])$(/current/WPSCO_CPN[DESC]),string"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_CPN"/>
				</message-rule-list>
			</message>
			
			<message name="POS_VOUCHER_NOT_USED_END">
				<message-rule-list>
					<!-- TBD Raise a DataNeed for confirmation -->
					<rule action-name="assign-variable" parameter="variable-name=ReturnCpnCnt;expression=0"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=command;value=DataNeeded"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=Type,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=Id,2,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=TopCaption.1,%%108,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=SummaryInstruction.1,%%9049,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=Mode,1,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_couponDN;parm-name=field;value=ContextToDisplay,SmDataEntryWithMediaListSmall,string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_couponDN])"/>
					<!-- New state to wait for response -->
					<rule action-name="push-state"/>
					<transition state-name="Finalization$CouponPrompt"/>
				</message-rule-list>
			</message>

			<!-- total>=200 and loyalty scanned in coinstar voucher screen -->
			<message name="POS_PROMOTION_SOLD">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Promo"/>
					<if expression="/current/WPSCO_Promo[VOID] == 0">
						<call name="PromotionSold"/>
					</if>
					<else>
						<call name="PromotionVoid"/>
					</else>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_Promo"/>
				</message-rule-list>
			</message>
			
			<state name="CouponPrompt">
			
				<message name="AI DataNeededReply">
					<message-rule-list>
						<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_KEY_PRESS)"/>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=CODE$(_T_)long$(_T_)32003"/>
						<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
						<rule action-name="pop-state"/>
					</message-rule-list>
				</message>
				
			</state>

			<state name="TransitionToSale">
				<entry-rule-list>
					<call name="AI_RequestPosState_Command"/>
				</entry-rule-list>

				<message name="POS_STATUS">
					<message-rule-list>
						<rule action-name="SaveObject" parameter="name=/current/WPSCO_STAT"/>
						<if expression="/current/WPSCO_STAT[STATUS] == $(STAT_SALE)">
							<!-- re-send the last total received -->
							<call name="SendWPSCOTotal_BalDue"/>
							<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
							<transition state-name="Itemization"/>
						</if>
						<else>
							<!-- No known failure condition possible in the POS, as precaution just resend request to enter tender state -->
							<call name="AI_ExitTenderMode_Command"/>
							<call name="AI_RequestPosState_Command"/>
						</else>
						<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
					</message-rule-list>
				</message>

			</state>

		</state>

		<state name="SuspendingTransaction">

			<message name="POS_TICKET_STARTED">
				<message-rule-list>
					<!--Transaction has finished -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=EndTransaction"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="Idle"/>
				</message-rule-list>
			</message>

			<message name="AI Tender" override="true"/>

		</state>

		<state name="VoidingTransaction">

			<message name="AI Tender" override="true"/>

			<message name="POS_TICKET_VOIDED"/>

			<message name="POS_TICKET_STARTED">
				<message-rule-list>
					<!--Transaction has finished -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=EndTransaction"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="Idle"/>
				</message-rule-list>
			</message>

		</state>

		<state name="WaitingForTermination">
			<!-- This state is used to wait for SSCO termination after shutdown. -->
			<!-- Communicaiton to the POS is no longer possible and cannot be re-established without a POS Restart -->

			<message name="WPSCO Automation Data">
				<message-rule-list>
					<!-- Ignore ALL AI messages until Application is restarted -->
					<rule action-name="log" parameter="text=ERROR:SSCO Application restart is required! "/>
				</message-rule-list>
			</message>

		</state>

		<state name="SSCO_Control_Check">

			<message name="AI DataNeededReply">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_REQUEST_STATUS)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</message-rule-list>
			</message>

			<message name="POS_STATUS">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_STAT"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<select value="/current/WPSCO_STAT[STATUS]">
						<when value="$(STAT_IDLE)">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=DataNeeded"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Type,0,int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,0,int"/>
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							<rule action-name="assign-variable" parameter="variable-name=TransState;expression=Inactive"/>
						</when>
						<when value="$(STAT_NO_SALE)">
							<!-- Control checks most typically happen inside a transaction -->
							<if expression="bStartedTrx">
								<rule action-name="assign-variable" parameter="variable-name=TransState;expression=Itemization"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,%%699,string"/>
								<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							</if>
							<else>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=DataNeeded"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Type,0,int"/>
								<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,0,int"/>
								<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
								<rule action-name="assign-variable" parameter="variable-name=TransState;expression=Idle"/>
							</else>
						</when>
						<when value="$(STAT_SALE)">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=ItemException"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,%699,string"/>
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							<rule action-name="assign-variable" parameter="variable-name=TransState;expression=Itemization"/>
						</when>
						<when value="$(STAT_TENDER)">
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,PIPGeneric,string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,13,int"/>
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							<rule action-name="assign-variable" parameter="variable-name=TransState;expression=Finalization"/>
						</when>
					</select>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
					<transition state-name="$(TransState)"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Cancel_Dirty_Transaction">

			<message name="AI Tender"/>

			<message name="POS_STATUS">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_STAT"/>
					<if expression="/current/WPSCO_STAT[STATUS]">
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=PosState"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=State,finalization,string"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</if>
					<call name="SendZeroTotal"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_STAT"/>
				</message-rule-list>
			</message>

			<message name="AI VoidTransaction">
				<message-rule-list>
					<call name="AI_VoidTransaction_Command"/>
				</message-rule-list>
			</message>

			<message name="POS_TICKET_VOIDED">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TransactionVoided"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Id,$(TrxID),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="VoidingTransaction"/>
				</message-rule-list>
			</message>

		</state>

		<state name="Training">

			<message name="POS_SIGN_OFF"/>
			<message name="ERROR_POS_SIGNOFF"/>
			<message name="POS_BEEP"/>
			<message name="POS_SIGN_ON"/>

			<message name="POS_ENTERED_TRAINING_MODE">
				<message-rule-list>					
					<rule action-name="assign-variable" parameter="variable-name=bInTraining;expression=true"/>						
				</message-rule-list>
			</message>			

			<message name="POS_LEFT_TRAINING_MODE">
				<message-rule-list>					
					<rule action-name="assign-variable" parameter="variable-name=bInTraining;expression=false"/>					
				</message-rule-list>
			</message>

			<message name="ERROR_POS_SIGNON">
				<message-rule-list>
					<!-- Work-around: POS is failed to signon, re-send "SCO_SIGN_ON" to POS  -->
					<!-- TODO:  Report POS Error if possible, need details of ERROR_POS_SIGNON message.  Retalix Gap -->
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SIGN_ON)"/>
					<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
				</message-rule-list>
			</message>

			<message name="POS_TICKET_STARTED">
				<message-rule-list>
					<if expression="$(bInTraining) == true">
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TrainingModeEntered"/>					
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</if>
					<else>
						<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TrainingModeExited"/>			
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					</else>
					<transition state-name="Idle"/>					
				</message-rule-list>
			</message>			
		</state>

		<state name="CoinStarTendering">

			<message name="AI DataNeededReply">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/AI_Item"/>
					<rule action-name="reset-plist" parameter="name=/current/wpsco_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=command;value=$(SCO_SCAN_ITEM)"/>
					<if expression="/current/AI_Item[Data.1]">
						<rule action-name="assign-variable" parameter="variable-name=strError;expression=substr(/current/AI_Item[Data.1],6,5)"/>
						<if expression="(strError == '00000') || (strError == '99999')">
							<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,UserDefined1,string"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
							<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,%9050,string"/>
							<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
							<rule action-name="RemoveObject"  parameter="name=/current/AI_Item"/>
							<transition state-name="Finalization"/>
						</if>
						<rule action-name="add-parameter" parameter="name=/current/wpsco_plist;parm-name=field;value=PLU$(_T_)alpha$(_T_)$(/current/AI_Item[Data.1])"/>
						<rule action-name="wpsco.SendRequest" parameter="$(plist[/current/wpsco_plist])"/>
					</if>
					<if expression="/current/AI_Item[Cancel]">
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,UserDefined1,string"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,13,int"/>
						<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
						<rule action-name="RemoveObject"  parameter="name=/current/AI_Item"/>
						<transition state-name="Finalization"/>
					</if>
				</message-rule-list>
			</message>
			
			<message name="POS_ERROR_TEXT">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_ERR"/>
					<try>
						<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=lookup(ErrorMessages,'$(/current/WPSCO_ERR[SCREEN_NAME])')"/>
					</try>
					<catch>
						<rule action-name="assign-variable" parameter="variable-name=ErrorMessage;expression=General_POS_Error"/>
					</catch>
					<rule action-name="send-msg" parameter="message-name=$(ErrorMessage)"/>						
				</message-rule-list>
			</message>

			<message name="General_POS_Error">
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,UserDefined1,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
					<rule action-name="assign-variable" parameter="variable-name=strError;expression=CleanWPSCOMsg('$(/current/WPSCO_ERR[ERR_TXT])')"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,$(strError),string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject"  parameter="name=/current/AI_Item"/>
					<transition state-name="Finalization"/>
				</message-rule-list>
			</message>

			<message name="POS_TOTAL">
				<message-rule-list>
					<rule action-name="SaveObject" parameter="name=/current/WPSCO_Total"/>
					<call name="SendWPSCOTotal_BalDue"/>
				</message-rule-list>
			</message>

			<message name="POS_BEEP"/>
			<message name="Ignore_POSError"/>

			<message name="POS_LOYALTY_CARD"  virtual="true" >
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=LoyaltyCard"/>
					<if expression="objects.exists(/current/AI_Item[Data.1])">
						<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=AccountNumber,$(/current/AI_Item[Data.1]),string"/>
					</if>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=CardType,loyalty,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Status,1,int"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,UserDefined1,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,%9050,string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<transition state-name="Finalization"/>
				</message-rule-list>
			</message>

			<message name="LoyaltyCardResponse"  virtual="true" >
				<message-rule-list>
					<rule action-name="reset-plist" parameter="name=/current/ws_plist"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=command;value=TenderException"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=TenderType,UserDefined1,string"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionType,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=ExceptionId,0,int"/>
					<rule action-name="add-parameter" parameter="name=/current/ws_plist;parm-name=field;value=Message.1,%9050,string"/>
					<rule action-name="wpsco.SendAutomationCommand" parameter="$(plist[/current/ws_plist])"/>
					<rule action-name="RemoveObject" parameter="name=/current/WPSCO_ERR"/>
					<rule action-name="RemoveObject" parameter="name=/current/AI_Item"/>
					<transition state-name="Finalization"/>
				</message-rule-list>
			</message>

			<message name="POS_TENDER_SOLD">
				<message-rule-list>
					<rule action-name="RemoveObject"  parameter="name=/current/AI_Item"/>
					<rule action-name="resend-msg"/>
					<transition state-name="Finalization"/>					
				</message-rule-list>
			</message>
		</state>

	</rules>
</state-machine>